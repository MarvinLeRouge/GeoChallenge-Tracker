# ---------------------------
# ðŸ§± docker-compose.yml (racine)
# ---------------------------
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: geo-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_URI_TPL=${MONGODB_URI_TPL}
      - MONGODB_DB=${MONGODB_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
    depends_on:
      - maildev
    volumes:
      - ./backend:/app
      - ./backend/generate_secret.py:/app/generate_secret.py
      - ./backend/uploads:/app/uploads         # pour fichiers utilisateur
      - ./backend/data/samples:/app/data/samples  # pour tests de dev
      - ./.env:/app/.env

  maildev:
    container_name: geo-maildev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: geo-frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=/api
    depends_on:
      - backend
    ports:
      - "5173:5173"
    env_file:
      - .env
    volumes:
      - ./frontend:/app
      - /app/node_modules  # ne pas Ã©craser node_modules du conteneur

  tiles:
    image: nginx:1.25-alpine
    container_name: geo-tiles
    restart: unless-stopped
    command: ["sh","-lc","rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
    volumes:
      # conf Nginx pour /tiles
      - ./ops/nginx/tiles.conf:/etc/nginx/conf.d/tiles.conf:ro
      # fichier de santÃ© optionnel (tuile locale pour test)
      - ./ops/nginx/www:/var/www:ro
      # cache disque persistant
      - tiles_cache:/var/cache/nginx/tiles_cache
    ports:
      # port mapping 
      - "8080:80"
    networks:
      - default

volumes:
  tiles_cache:
